{"version":3,"sources":["components/Nav/index.js","pages/Home.js","components/Button/index.js","pages/Signin.js","pages/Profile.js","pages/Signup.js","pages/Createpost.js","reducers/userReducer.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","_useContext","useContext","UserContext","state","dispatch","react_default","a","createElement","className","react_router_dom","to","id","Home","_useState","useState","_useState2","Object","slicedToArray","data","setData","useEffect","fetch","headers","Authorization","localStorage","getItem","then","res","json","result","console","log","posts","map","post","key","_id","postedBy","name","src","image","style","color","title","body","type","placeholder","Button","_ref","children","onClick","Signin","history","useHistory","email","setEmail","_useState3","_useState4","password","setPassword","value","onChange","e","target","components_Button","test","method","Content-Type","JSON","stringify","error","M","toast","html","setItem","token","user","payload","push","catch","err","Profile","maxWidth","margin","display","justifyContent","borderBottom","width","height","borderRadius","padding","Signup","setName","_useState5","_useState6","message","CreatePost","setTitle","setBody","setImage","_useState7","_useState8","urlImage","setUrlImage","picture","files","FormData","append","url","initialState","reducer","action","createContext","Routing","parse","react_router","exact","path","pages_Home","pages_Signin","pages_Signup","pages_Profile","Createpost","App","_useReducer","useReducer","_useReducer2","Provider","components_Nav","App_Routing","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1d7743a7.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\"\r\n\r\nconst Nav = () => {\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const renderList = () => {\r\n        if (state) {\r\n            return [\r\n                <li><Link to=\"/profile\">Profile</Link></li>,\r\n                <li><Link to=\"/create\">Create Post</Link></li>\r\n            ]\r\n        } else {\r\n            return [\r\n                <li><Link to=\"/signin\">Signin</Link></li>,\r\n                <li><Link to=\"/signup\">Signup</Link></li>\r\n            ]\r\n        }\r\n    }\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper blue Lighten-4\">\r\n                <Link to={state?\"/\":\"/signin\"} className=\"brand-logo left\">InstaNote</Link>\r\n                <ul id=\"nav-mobile\" className=\"right\">\r\n                    {renderList()}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        fetch(\"/allpost\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                setData(result.posts);\r\n            })\r\n    }, [])\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(post => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={post._id}>\r\n                            <h5>{post.postedBy.name}</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={post.image} />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <i className=\"material-icons\" style={{ color: \"red\" }}>favorite</i>\r\n                                <h6>{post.title}</h6>\r\n                                <p>{post.body}</p>\r\n                                <input type=\"text\" placeholder=\"add a comment\" />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Button({children, onClick }){\r\n    return(\r\n        <button onClick={onClick} className=\"btn waves-effect waves-light\">{children}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, { useState, useContext } from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport {UserContext} from \"../App\";\r\n\r\nconst Signin = () => {\r\n    const {state, dispatch} = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const PostData = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"invalid email\" })\r\n            return;\r\n        }\r\n        fetch(\"/signin\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                if (data.error) {\r\n                    M.toast({ html: data.error });\r\n                } else {\r\n                    localStorage.setItem(\"jwt\",data.token);\r\n                    localStorage.setItem(\"user\",JSON.stringify(data.user));\r\n                    dispatch({type:\"User\",payload:data.user});\r\n                    M.toast({ html: \"Sign in success\" });\r\n                    history.push(\"/\");\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card\">\r\n                <h2>InstaNote</h2>\r\n                <input type=\"text\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                <Button onClick={PostData}>Sign In</Button>\r\n                <br />\r\n                <Link to=\"/signup\">No account yet? Sign Up.</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signin;","import React from \"react\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div style={{ maxWidth: \"640px\", margin: \"0px auto\" }}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\", margin: \"10px\", borderBottom: \"1px solid black\" }}>\r\n                <div>\r\n                    <img style={{ width: \"140px\", height: \"140px\", borderRadius: \"70px\", padding: \"5px\" }}\r\n                        src=\"https://images.unsplash.com/photo-1522196772883-393d879eb14d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1182&q=80\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>Astrid Suhartono</h4>\r\n                    <div style={{ justifyContent: \"space-between\" }}>\r\n                        <h5>astrid@mail.com</h5>\r\n                        <h5>3 posts</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1508739773434-c26b3d09e071?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1476820865390-c52aeebb9891?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1498550744921-75f79806b8a7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, { useState } from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n//import axios from 'axios'\r\n\r\nconst Signup = () => {\r\n    const history = useHistory();\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const PostData = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"invalid email\" })\r\n            return;\r\n        }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error });\r\n                } else {\r\n                    M.toast({ html: data.message });\r\n                    history.push(\"/signin\");\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    // const PostData = () => {\r\n    //     axios.post(\"/signup\", {\r\n    //         name,\r\n    //         password,\r\n    //         email\r\n    //     })\r\n    //         .then((res) => {\r\n    //             console.log(res);\r\n    //             if (res.error) {\r\n    //                 M.toast({ html: res.error });\r\n    //             } else {\r\n    //                 M.toast({ html: res.message });\r\n    //                 history.push(\"/signin\");\r\n    //             }\r\n    //         }).catch(err => {\r\n    //             console.log(err);\r\n    //         })\r\n    // }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card\">\r\n                <h2>InstaNote</h2>\r\n                <input type=\"text\" placeholder=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                <Button onClick={PostData}>Sign Up</Button>\r\n                <br />\r\n                <Link to=\"/signin\">Have an account? Sign In.</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport M from \"materialize-css\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst CreatePost = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [urlImage, setUrlImage] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (urlImage) {\r\n            fetch(\"/createpost\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    picture: urlImage\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    if (data.error) {\r\n                        M.toast({ html: data.error });\r\n                    } else {\r\n                        M.toast({ html: \"New post successfully added\" });\r\n                        history.push(\"/\");\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }, [urlImage]);\r\n\r\n    const postDetails = () => {\r\n        const data = new FormData();\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\", \"instanote\");\r\n        data.append(\"cloud_name\", \"bootcamp-instanote\");\r\n        fetch(\"https://api.cloudinary.com/v1_1/bootcamp-instanote/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => { setUrlImage(data.url) })\r\n            .catch(err => { console.log(err) });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"card post-card input-field\">\r\n            <input type=\"text\" placeholder=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"body\" value={body} onChange={(e) => setBody(e.target.value)} />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn\">\r\n                    <span>Image</span>\r\n                    <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <Button onClick={postDetails}>Submit Post</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","export const initialState = null\r\n\r\nexport const reducer = (state, action) => {\r\n    if (action.type == \"USER\") {\r\n        return action.payload;\r\n    }\r\n    return state;\r\n} ","import React, { Component, useEffect, createContext, useReducer, useContext } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter as Router, Route, Switch, useHistory } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\nimport Profile from \"./pages/Profile\";\nimport Signup from \"./pages/Signup\";\nimport CreatePost from \"./pages/Createpost\";\nimport { reducer, initialState } from \"./reducers/userReducer\";\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    //console.log(typeof(user),user);\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n      history.push(\"/\");\n    }\n    else {\n      history.push(\"/signin\");\n    }\n  }, [])\n  return (\n    <Switch>\n      <Route exact path=\"/\" >\n        <Home />\n      </Route>\n      <Route path=\"/signin\" >\n        <Signin />\n      </Route>\n      <Route path=\"/signup\" >\n        <Signup />\n      </Route>\n      <Route path=\"/profile\" >\n        <Profile />\n      </Route>\n      <Route path=\"/create\" >\n        <CreatePost />\n      </Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <Router>\n        <Nav />\n        <Routing />\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}